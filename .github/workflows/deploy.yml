name: Deploy

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install npm dependencies
        run: npm ci

      - name: Lint
        run: npm run lint
        env:
          BASE_URL: http://localhost:3000

      - name: Type check
        run: npm run typecheck

      - name: Format
        run: npm run format

      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v4
        if: steps.auto-commit-action.outputs.changes_detected == 'true'
        with:
          commit_message: Apply formatting changes

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        run: |
          npm run dev &
          npm run test:e2e
        env:
          NODE_ENV: development
          BASE_URL: http://localhost:3000

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information (Preview)
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts (Preview)
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel (Preview)
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}

      - name: Run Tests Against Vercel
        run: npm run test:e2e
        env:
          NODE_ENV: test
          BASE_URL: ${{ github.event.push.target_url }}

      - name: Pull Vercel Environment Information (Production)
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts (Production)
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel (Production)
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
